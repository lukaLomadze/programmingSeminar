import stanford.karel.Karel;

public class problem01 extends Karel {
//	კარელი დგას 1x1 უჯრაზე. 5x1 უჯრაზე დევს 10 ცალი ბრილიანტი, კარელმა ათივე
//	ბრილიანტი უნდა გადაიტანოს 6x1 უჯრაზე.
//	3. კარელი დგას 1x1 უჯრაზე, გაიყვანეთ იგი პირველი ქუჩის ბოლომდე. გაითვალისწინეთ, რომ
//	სამყაროს ზომა არ იცით. თქვენი პროგრამა უნდა მუშაობდეს ნებისმიერი ზომის
//	სამყაროსათვის.
//	4. კარელი დგას 1x1 უჯრაზე, შეავსებინეთ მას პირველი ქუჩა ბრილიანტებით. ანუ პირველი
//	ქუჩის ყველა უჯრაზე უნდა იდოს ზუსტად ერთი ბრილიანტი. ჩათვალეთ რომ საწყის
//	სამყაროში ბრილიანტები არსად არ დევს.
//	5. კარელი დგას 1x1 უჯრაზე, შეავსებინეთ მას პირველი ქუჩა ბრილიანტებით. ანუ პირველი
//	ქუჩის ყველა უჯრაზე უნდა იდოს ზუსტად ერთი ბრილიანტი. ჩათვალეთ რომ საწყისი
//	სამყარო ცარიელი არ არის და გარკვეულ(ჩვენთვის უცნობ) უჯრებში თითო(მხოლოდ ერთი)
//	ბრილიანტი დევს.
//	6. კარელმა უნდა შეკრიბოს ორი რიცხვი, 2x1 უჯრაზე დევს n ცალი ბრილიანტი, 3x1 უჯრაზე m
//	ცალი ბრილიანტი, კარელმა 4x1 უჯრაზე უნდა დადოს n+m ბრილიანტი. ჩათვალეთ, რომ
//	კარელს ჩანთაში უსასრულო რაოდენობის ბრილიანტი აქვს.
//	
	
	/*//N2
	 * public void run(){
		
		for (int i = 0; i < 4; i++) {
			move(); 
			}
		for (int i = 0; i < 10; i++) {
			pickBeeper(); 
			}
		move();
		
		for (int i = 0; i < 10; i++) {
			putBeeper(); 
			}
		*/
	
	
	
	//3
	while(frontIsClear()){
		move();
	}
	
	
	
		
		
		
		
		
	}
	
	
	
}
